// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PetProject.Volunteers.Infrastructure.DbContexts;

#nullable disable

namespace PetProject.Volunteers.Infrastructure.Migrations
{
    [DbContext(typeof(VolunteerWriteDbContext))]
    [Migration("20250802091838_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PetProject.Volunteers.Domain.Entities.Pet", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Photos")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<int>("Status")
                        .HasMaxLength(10)
                        .HasColumnType("integer");

                    b.Property<bool>("_isDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<Guid>("volunteer_id")
                        .HasColumnType("uuid");

                    b.ComplexProperty<Dictionary<string, object>>("BirthDate", "PetProject.Volunteers.Domain.Entities.Pet.BirthDate#BirthDay", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<DateTime>("BirthDate")
                                .HasMaxLength(100)
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("birth_date");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("CastrationStatus", "PetProject.Volunteers.Domain.Entities.Pet.CastrationStatus#CastrationStatus", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("castration_status");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Color", "PetProject.Volunteers.Domain.Entities.Pet.Color#Color", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("character varying(10)")
                                .HasColumnName("color");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("DateOfCreation", "PetProject.Volunteers.Domain.Entities.Pet.DateOfCreation#DateOfCreation", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<DateTime>("CreationDate")
                                .HasMaxLength(100)
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("creation_date");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Height", "PetProject.Volunteers.Domain.Entities.Pet.Height#Height", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<double>("Value")
                                .HasMaxLength(10)
                                .HasColumnType("double precision")
                                .HasColumnName("height");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Nickname", "PetProject.Volunteers.Domain.Entities.Pet.Nickname#NickName", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("character varying(10)")
                                .HasColumnName("nick_name");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("OwnerTelephoneNumber", "PetProject.Volunteers.Domain.Entities.Pet.OwnerTelephoneNumber#TelephonNumber", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("owner_telephon_number");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("PetInfo", "PetProject.Volunteers.Domain.Entities.Pet.PetInfo#PetInfo", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<Guid>("BreedId")
                                .HasColumnType("uuid")
                                .HasColumnName("BreedId");

                            b1.Property<Guid>("SpeciesId")
                                .HasColumnType("uuid")
                                .HasColumnName("SpeciesId");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Position", "PetProject.Volunteers.Domain.Entities.Pet.Position#Position", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("Value")
                                .HasColumnType("integer")
                                .HasColumnName("serial_number");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("StatusHealth", "PetProject.Volunteers.Domain.Entities.Pet.StatusHealth#StatusHealth", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("character varying(10)")
                                .HasColumnName("status_health");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("VaccinationStatus", "PetProject.Volunteers.Domain.Entities.Pet.VaccinationStatus#VaccinationStatus", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("vaccination_status");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Weight", "PetProject.Volunteers.Domain.Entities.Pet.Weight#Weight", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<double>("Value")
                                .HasMaxLength(10)
                                .HasColumnType("double precision")
                                .HasColumnName("weight");
                        });

                    b.HasKey("Id");

                    b.HasIndex("volunteer_id");

                    b.ToTable("pets", (string)null);
                });

            modelBuilder.Entity("PetProject.Volunteers.Domain.Entities.Volunteer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<bool>("_isDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.ComplexProperty<Dictionary<string, object>>("Description", "PetProject.Volunteers.Domain.Entities.Volunteer.Description#Description", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Information")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("character varying(10)")
                                .HasColumnName("description");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Email", "PetProject.Volunteers.Domain.Entities.Volunteer.Email#Email", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Link")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("link");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("FullName", "PetProject.Volunteers.Domain.Entities.Volunteer.FullName#FullName", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("first_name");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("last_name");

                            b1.Property<string>("Surname")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("surname");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("TelephonNumber", "PetProject.Volunteers.Domain.Entities.Volunteer.TelephonNumber#TelephonNumber", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("telehon_number");
                        });

                    b.HasKey("Id");

                    b.ToTable("volunteers", (string)null);
                });

            modelBuilder.Entity("PetProject.Volunteers.Domain.Entities.Pet", b =>
                {
                    b.HasOne("PetProject.Volunteers.Domain.Entities.Volunteer", null)
                        .WithMany("Pets")
                        .HasForeignKey("volunteer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PetProject.Volunteers.Domain.Entities.Volunteer", b =>
                {
                    b.OwnsMany("PetProject.Volunteers.Domain.VolunteerValueObject.SocialMedia", "Socials", b1 =>
                        {
                            b1.Property<Guid>("VolunteerId")
                                .HasColumnType("uuid");

                            b1.Property<int>("__synthesizedOrdinal")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<string>("LinkMedia")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("link_media");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("title");

                            b1.HasKey("VolunteerId", "__synthesizedOrdinal");

                            b1.ToTable("volunteers");

                            b1.ToJson("Social");

                            b1.WithOwner()
                                .HasForeignKey("VolunteerId");
                        });

                    b.Navigation("Socials");
                });

            modelBuilder.Entity("PetProject.Volunteers.Domain.Entities.Volunteer", b =>
                {
                    b.Navigation("Pets");
                });
#pragma warning restore 612, 618
        }
    }
}
